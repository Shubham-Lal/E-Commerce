require('dotenv').config()
const express = require('express')
const cors = require('cors')
const mongoose = require('mongoose')
const controller = require('./controller.js')
const verifyToken = require('./jwt.js')

const app = express()

app.use(express.json({ limit: '1mb' }))
app.use(express.urlencoded({ extended: true }))
app.use(cors())

app.get('/', (_, res) => res.send('Server running'))
app.post('/register', controller.createUser)
app.post('/login', controller.verifyUser)
app.get('/login', verifyToken, controller.autoLogin)
app.post('/products', verifyToken, controller.createProduct)
app.get('/products', controller.fetchProducts)
app.put('/products/:id', verifyToken, controller.updateProduct)
app.delete('/products/:id', verifyToken, controller.deleteProduct)
app.post('/cart', controller.updateCart)
app.get('/cart', controller.fetchCart)
app.get('/order', controller.checkoutOrder)
app.get('/order/success', controller.completeOrder)
app.post('/orders', verifyToken, controller.createOrder)
app.get('/orders', verifyToken, controller.fetchOrders)
app.get('/sessions', controller.fetchSessions)
app.post('/payment', controller.processPayment)

const PORT = process.env.PORT || 8000
mongoose.connect(process.env.MONGODB_URI)
    .then(() => app.listen(PORT, () => console.log(`Listening for requests on port: ${PORT}`)))
    .catch(err => console.log(`MongoDB connection error: ${err}`))